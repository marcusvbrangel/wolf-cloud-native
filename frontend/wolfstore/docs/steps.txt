

echo "# wolf-cloud-native" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/marcusvbrangel/wolf-cloud-native.git
git push -u origin main












1. criar o projeto angular

  ng new wolfstore


2. fazer o build do projeto

  ng build

    Initial chunk files   | Names         |  Raw size | Estimated transfer size
    main-KZ3DSSKO.js      | main          | 196.34 kB |                52.88 kB
    polyfills-FFHMD2TL.js | polyfills     |  34.52 kB |                11.28 kB
    styles-5INURTSO.css   | styles        |   0 bytes |                 0 bytes

                          | Initial total | 230.86 kB |                64.16 kB

    Application bundle generation complete. [5.568 seconds]

    Output location: ~/Documentos/desenvolvimento/estudos/wolf-cloud-native/frontend/wolfstore/dist/wolfstore


3. criar .dockerignore


4. criar o dockerfile


5. criar a imagem

  docker image build -t wolfstore:1.0 .


      [+] Building 32.2s (17/17) FINISHED          docker:default
       => [internal] load build definition from Dockerfile   0.0s
       => => transferring dockerfile: 343B                   0.0s
       => [internal] load metadata for docker.io/library/ng  2.0s
       => [internal] load metadata for docker.io/library/no  2.0s
       => [auth] library/node:pull token for registry-1.doc  0.0s
       => [auth] library/nginx:pull token for registry-1.do  0.0s
       => [internal] load .dockerignore                      0.0s
       => => transferring context: 151B                      0.0s
       => [build 1/7] FROM docker.io/library/node:hydrogen-  7.2s
       => => resolve docker.io/library/node:hydrogen-alpine  0.0s
       => => sha256:a25c800a782c8fd378561a2 7.69kB / 7.69kB  0.0s
       => => sha256:5348a188a579ce04d3b046e 1.72kB / 1.72kB  0.0s
       => => sha256:25400e30e462dcf28305d53 6.18kB / 6.18kB  0.0s
       => => sha256:0a9a5dfd008f05ebc27e479 3.63MB / 3.63MB  0.6s
       => => sha256:1d4df60de0ae4dd2998a2 40.10MB / 40.10MB  5.6s
       => => sha256:e35374db49a048db667da89 1.39MB / 1.39MB  1.2s
       => => extracting sha256:0a9a5dfd008f05ebc27e4790db07  0.1s
       => => sha256:5144ae5a961c347d7f5d389a801 443B / 443B  1.2s
       => => extracting sha256:1d4df60de0ae4dd2998a2f90a10f  1.3s
       => => extracting sha256:e35374db49a048db667da89eea1d  0.0s
       => => extracting sha256:5144ae5a961c347d7f5d389a8018  0.0s
       => [internal] load build context                      0.1s
       => => transferring context: 7.50MB                    0.1s
       => [stage-1 1/2] FROM docker.io/library/nginx:1.25.2  6.6s
       => => resolve docker.io/library/nginx:1.25.2-alpine@  0.0s
       => => sha256:7272a6e0f728e95c8641d21 1.65kB / 1.65kB  0.0s
       => => sha256:fc2d39a0d6565db4bd6c94a 1.99kB / 1.99kB  0.0s
       => => sha256:661daf9bcac824a4be78d 16.69kB / 16.69kB  0.0s
       => => sha256:96526aa774ef0126ad0fe9e 3.40MB / 3.40MB  2.1s
       => => sha256:4a0f59666a5fd450f2ce8d0 1.90MB / 1.90MB  2.3s
       => => extracting sha256:96526aa774ef0126ad0fe9e9a957  0.1s
       => => sha256:9f5472f13101a5c107862581ec3 628B / 628B  2.7s
       => => extracting sha256:4a0f59666a5fd450f2ce8d09ed4e  0.2s
       => => sha256:a4c1563b8f0493c722ef582966b 958B / 958B  2.5s
       => => sha256:7662ce3fbb6ddde8fceaff888cc 370B / 370B  2.7s
       => => extracting sha256:9f5472f13101a5c107862581ec30  0.0s
       => => extracting sha256:a4c1563b8f0493c722ef582966b7  0.0s
       => => extracting sha256:7662ce3fbb6ddde8fceaff888cc5  0.0s
       => => sha256:f1a3f1328c13555b0fa6833 1.40kB / 1.40kB  2.9s
       => => sha256:d94270e5bff8364a9c3de98 1.21kB / 1.21kB  2.9s
       => => extracting sha256:d94270e5bff8364a9c3de98e4a7c  0.0s
       => => extracting sha256:f1a3f1328c13555b0fa6833ca510  0.0s
       => => sha256:a2860423d97a2f0920011 12.64MB / 12.64MB  5.9s
       => => extracting sha256:a2860423d97a2f092001145d53a1  0.4s
       => [build 2/7] WORKDIR /app                           0.6s
       => [build 3/7] COPY package*.json .                   0.1s
       => [build 4/7] RUN npm install                       16.2s
       => [build 5/7] RUN npx ngcc --properties es2023 brow  0.9s
       => [build 6/7] COPY . .                               0.1s
       => [build 7/7] RUN npm run build                      4.7s
       => [stage-1 2/2] COPY --from=build /app/dist/wolfsto  0.1s
       => exporting to image                                 0.0s
       => => exporting layers                                0.0s
       => => writing image sha256:a3d227df927eb1024d23a82f6  0.0s
       => => naming to docker.io/library/wolfstore:1.0       0.0s


  docker image ls

      REPOSITORY   TAG              IMAGE ID       CREATED              SIZE
      wolfstore    1.0              a3d227df927e   About a minute ago   42.9MB


  docker container rum -p 8085:80 wolfstore:1.0



docker run --name wolfstore -p 8085:80 wolfstore:1.0











apk add vim

vim /etc/nginx/conf.d/default.conf

server {
    listen 80;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    error_page 404 /index.html;
    location = /index.html {
        internal;
    }
}


 include /etc/nginx/conf.d/*.conf;

ls conf.d/
default.conf

cat /etc/nginx/conf.d/default.conf

vim /etc/nginx/conf.d/default.conf












